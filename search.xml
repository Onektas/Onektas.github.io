<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++ Primer学习笔记</title>
      <link href="/posts/7df3ebff/"/>
      <url>/posts/7df3ebff/</url>
      
        <content type="html"><![CDATA[<style>blockquote {  background-color: var(--readmode-light-color);}</style><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><h3 id="2022年8月8日"><a href="#2022年8月8日" class="headerlink" title="2022年8月8日"></a>2022年8月8日</h3><ol><li><p>函数的定义</p><blockquote><p>P2<br>一个函数的定义包含四部分：返回类型、函数名、形参列表、函数体<br>main函数的返回类型必须为’int’</p></blockquote></li><li><p>返回值</p><blockquote><p>P2-3<br><code>return</code>。结束函数的执行<br>main的返回值被用来指示状态。返回值0表明成功，非0的返回值的含义由系统定义，通常用来指出错误类型</p></blockquote></li><li><p>标准输入输出对象</p><blockquote><p>P5<br>iostream库定义了四个IO对象。标准输入cin、标准输出cout、标准错误cerr、clog输出日志</p></blockquote></li><li><p>操纵符</p><blockquote><p>P6<br><code>endl</code>。结束当前行，并将与设备关联的缓冲区中的内容刷到设备中。缓冲刷新操作可以保证到目前为止程序所产生的所有输出都真正写入输出流中，而不是仅停留在内存中等待写入流</p></blockquote></li><li><p>命名空间</p><blockquote><p>P7<br><code>std</code></p></blockquote></li><li><p>初始化</p><blockquote><p>P7<br>初始化一个变量，就是在变量创建的同时为它赋予一个值</p></blockquote></li><li><p>文件结束符</p><blockquote><p>P14<br>Windows: Ctrl+Z，Enter&#x2F;Return<br>UNIX: Ctrl+D</p></blockquote></li></ol><h3 id="2022年8月9日"><a href="#2022年8月9日" class="headerlink" title="2022年8月9日"></a>2022年8月9日</h3><ol><li>成员函数<blockquote><p>P20<br><code>item1.isbn()</code>。<code>item1</code>对象名；<code>.</code>点运算符；<code>isbn</code>成员函数&#x2F;方法；<code>()</code>调用运算符<br>调用名为’item1’的对象的成员函数’isbn’，此函数返回item1中保存的ISBN书号</p></blockquote></li></ol><h3 id="本周tips"><a href="#本周tips" class="headerlink" title="本周tips"></a>本周tips</h3><ol><li><blockquote><p>修改代码时，不要忘记同时更新注释(P8)</p></blockquote></li></ol><h3 id="本周评语"><a href="#本周评语" class="headerlink" title="本周评语"></a>本周评语</h3><blockquote><p>main函数是一种约定，当你编译完程序就会生成一个可执行程序exe，双击的时候操作系统会开一条进程并加载你这个exe文件，然后寻找main函数并执行，当执行结束进程退出时候，这个返回值就是告诉操作系统进程是否是正常结束，正常结束就是返回0，不正常结束就是返回其他值</p></blockquote><br><h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><h3 id="2022年8月16日"><a href="#2022年8月16日" class="headerlink" title="2022年8月16日"></a>2022年8月16日</h3><ol><li><p>算术类型</p><blockquote><p>P30-31<br>算术类型(字符、整型数、布尔值、浮点数)和空类型<br>整型(整型数、字符、布尔值)和浮点型<br>比特(0和1)、字节(可寻址的最小内存块)、字(存储的基本单元)</p></blockquote></li><li><p>带符号类型和无符号类型</p><blockquote><p>P31-32<br>除去布尔型和扩展的字符型之外，其他整型可以划分为’带符号的’和’无符号的’<br>带符号类型可以表示正数、负数或0；无符号类型仅能表示大于等于0的值<br>字符型分为三种：<code>char</code>、<code>signed char</code>、<code>unsigned char</code></p></blockquote></li></ol><h3 id="2022年8月17日"><a href="#2022年8月17日" class="headerlink" title="2022年8月17日"></a>2022年8月17日</h3><ol><li><p>类型转换</p><blockquote><p>P33-35<br>布尔值赋给非布尔值，若初始值为true，结果为1<br>当表达式里既有带符号类型又有无符号类型，带符号数会自动地转换成无符号数</p></blockquote></li><li><p>字符和字符串字面值</p><blockquote><p>P36<br>单引号括起来的一个字符称为char型字面值，双引号括起来的零个或多个字符则构成字符串型字面值<br>编译器在每个字符串的结尾处添加一个空字符<code>\0</code>，因此，字符串字面值的实际长度要比它的内容多1<br>两个字符串字面值位置紧邻且仅由空格、缩进和换行符分隔，则它们实际上是一个整体</p></blockquote></li><li><p>转义序列</p><blockquote><p>P36<br>我们也可以用泛化的转义序列，其形式是<code>\x</code>后紧跟1个或多个十六进制数字，或者<code>\</code>后紧跟1个、2个或3个八进制数字<br><code>\</code>后跟着的八进制数字超过3个，只有前3个数字与<code>\</code>构成转义序列</p></blockquote></li></ol><h3 id="2022年8月19日"><a href="#2022年8月19日" class="headerlink" title="2022年8月19日"></a>2022年8月19日</h3><ol><li><p>对象</p><blockquote><p>P39<br>通常情况下，对象是指一块能存储数据并具有某种类型的内存空间</p></blockquote></li><li><p>初始化</p><blockquote><p>P39<br>初始化≠赋值，初始化的含义是创建变量时赋予其一个初始值，而赋值的含义是把对象的当前值擦除，而以一个新值来替代</p></blockquote></li></ol><h3 id="2022年8月20日"><a href="#2022年8月20日" class="headerlink" title="2022年8月20日"></a>2022年8月20日</h3><ol><li><p>列表初始化</p><blockquote><p>P39<br>C++11新标准，初始化对象或赋值都可以使用”列表初始化”</p></blockquote></li><li><p>默认初始化</p><blockquote><p>P40<br>内置类型，定义于任何函数体之外的变量被初始化为0，定义在函数体内部的内置类型变量将不被初始化<br>类的对象如果没有显式地初始化，则其值由类确定</p></blockquote></li></ol><h3 id="2022年8月21日"><a href="#2022年8月21日" class="headerlink" title="2022年8月21日"></a>2022年8月21日</h3><ol><li><p>变量声明和定义的关系</p><blockquote><p>P41<br>声明，使得名字为程序所知，一个文件如果想使用别处定义的名字则必须包含对那个名字的声明<br>定义，负责创建与名字关联的实体<br>变量声明规定了变量的类型和名字，在这一点上定义与之相同。但是除此之外，定义还申请存储空间，也可能会为变量赋一个初始值</p></blockquote></li><li><p>标识符</p><blockquote><p>P42<br>C++为标准库保留了一些名字<br>用户自定义的标识符中不能连续出现两个下划线，也不能以下划线紧连大写字母开头<br>定义在函数体外的标识符不能以下划线开头</p></blockquote></li><li><p>作用域</p><blockquote><p>P44<br>因为全局作用域并没有名字，所以当作用域运算符<code>::</code>的左侧为空时，向全局作用域发出请求获取作用域操作符右侧名字对应的变量</p></blockquote></li></ol><h3 id="本周tips-1"><a href="#本周tips-1" class="headerlink" title="本周tips"></a>本周tips</h3><ol><li><p>如何选择类型</p><blockquote><p>P32<br>当明确知晓数值不可能为负时，选用无符号类型<br>整数运算，选用int，int不足直接用’long long’<br>算术表达式，不要用char或bool，存放字符和布尔值使用<br>浮点数运算，选用double</p></blockquote></li><li><p>变量命名规范</p><blockquote><p>P42<br>标识符要能体现实际意义<br>变量名一般用小写字母，如index<br>用户自定义的类名一般以大写字母开头，如Sales_item<br>如果标识符用多个单词组成，则单词间应有明显区分，如student_loan或studentLoan</p></blockquote></li></ol><h3 id="本周评语-1"><a href="#本周评语-1" class="headerlink" title="本周评语"></a>本周评语</h3><blockquote><p>了解一点代码到exe的基本过程吧：每个代码cpp文件，会把include头文件展开，然后一个cpp编译生成一个obj文件，这个过程成为编译，最后link会把所有依赖到的obj里面的代码链接到一块，生成可执行程序exe，这个过程成为链接<br>那么link怎么找到哪些代码是最终需要的呢，答案就是从main函数出发，main用到的就需要放到最终的exe里面，然后是main用到的再用到的，是一颗树的结构。main用到函数A，B，函数A，B用到函数C，D，E，F等等<br>所以这也是为什么你写两个cpp文件，里面都写一个同样的函数比如funcA，如果返回值，参数列表都一样的话，最终会报一个redefination，重复定义的错误，因为link的时候不知道去链接哪一个</p></blockquote><br><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><h3 id="2022年8月24日"><a href="#2022年8月24日" class="headerlink" title="2022年8月24日"></a>2022年8月24日</h3><ol><li><p>引用</p><blockquote><p>P46<br>引用即别名，引用并非对象，引用必须初始化<br>定义引用时，程序把引用和它的初始值绑定在一起，而不是将初始值拷贝给引用</p></blockquote></li><li><p>指针</p><blockquote><p>P47-48<br>指针本身就是一个对象，允许对指针赋值和拷贝，在指针的生命周期内它可以先后指向几个不同的对象<br>指针无须在定义时赋初值，和其他内置类型一样，在块作用域内定义的指针如果没有被初始化，也将拥有一个不确定的值<br>指针存放的是某个对象的地址，除0、nullptr、其他指针、NULL外无法直接赋值</p><p><code>&amp;</code>取地址符，获取对象的地址<br><code>*</code>解引用符，访问指针的对象</p><p>空指针用<code>nullptr</code>初始化(C++11新标准引入)</p></blockquote></li><li><p>void*指针</p><blockquote><p>P50<br>“void*“是一种特殊的指针类型，可用于存放任意对象的地址<br>“void*“指针指向的对象不能直接操作。void*可以用来和别的指针比较、作为函数的输入或输出、或者赋给另外一个void*指针</p></blockquote></li><li><p>指向指针的引用</p><blockquote><p>P52<br>引用本身不是一个对象，因此不能定义指向引用的指针。但指针是对象，所以存在对指针的引用<br><code>int i=42; int *p; int *&amp;r=p;</code></p></blockquote></li></ol><h3 id="本周评语-2"><a href="#本周评语-2" class="headerlink" title="本周评语"></a>本周评语</h3><blockquote><p>所有变量，包括指针无非都是内存条上的几个字节，不同类型只是编译器用不同的方式去解读这几个字节<br>int，那么这个4个字节对应一个整数去理解<br>int*，那么这4个字节对应的是一个内存条地址（32位系统地址是4个字节，64位系统地址是8个字节）</p></blockquote><br><h2 id="第四周"><a href="#第四周" class="headerlink" title="第四周"></a>第四周</h2><h3 id="2022年9月3日"><a href="#2022年9月3日" class="headerlink" title="2022年9月3日"></a>2022年9月3日</h3><ol><li><p>const限定符</p><blockquote><p>P54<br>如果想在多个文件之间共享const对象，必须在变量的定义或者声明之前添加extern关键字<br>常量引用&#x3D;指向常量的引用，常量指针≠指向常量的指针(见下5.顶层const笔记)</p></blockquote></li><li><p>const的引用</p><blockquote><p>P55<br>引用的类型必须与其所引用对象的类型一致，但是有两个例外<br>第一个例外是，在初始化常量引用时允许用任意表达式作为初始值，只要该表达式的结果能转换成引用的类型即可<br>第二个例外在P534</p></blockquote></li><li><p>指针和const</p><blockquote><p>P56<br>指针的类型必须与其所指对象的类型一致，但有两个例外<br>第一个例外是，允许令一个指向常量的指针指向一个非常量对象<br>第二个例外在P534</p></blockquote></li><li><p>const指针</p><blockquote><p>P56<br><code>const int *p</code>指向常量的指针，可以不初始化，不可以通过指针改变所指对象的值<br><code>int *const p=&amp;i</code>常量指针，必须被初始化，指针本身的值不可以改变，修改所指对象的值取决与所指对象的类型</p></blockquote></li><li><p>顶层const</p><blockquote><p>P57<br>顶层表示指针本身是个常量，底层表示指针所指的对象是一个常量<br>顶层const可以表示任意的对象是常量，如算术类型、类、指针等；底层const则与指针和引用等复合类型的基本类型部分有关<br>指针类型既可以是顶层const也可以是底层const</p><p>当执行对象拷贝操作时，拷入和拷出的对象必须具有相同的底层const资格，或者两个对象的数据类型必须能够转换。一般来说非常量可以转换成常量，反之则不行</p></blockquote></li><li><p>constexpr常量表达式</p><blockquote><p>P58-59<br>常量表达式是指值不会改变并且在编译过程就能得到计算结果的表达式<br>C++11新标准规定，允许将变量声明为<code>constexpr</code>以便由编译器来验证变量的值是否是一个常量表达式。声明为constexpr的变量一定是一个常量，而且必须用常量表达式初始化</p></blockquote></li><li><p>字面值类型</p><blockquote><p>P59<br>到目前为止接触过的数据类型中，算术类型、引用、指针都属于字面值类型<br>自定义类、IO库、string类型则不属于字面值类型，不能被定义成constexpr<br>其他字面值类型将在P267、P736介绍</p><p>一个constexpr指针的初始值必须是nullptr、0、存储于某个固定地址中的对象<br>函数体内定义的变量一般来说并非存放在固定地址中，因此constexpr指针不能指向这样的变量<br>定义于函数体之外的对象其地址固定不变，能用来初始化constexpr指针(P184提及)<br>允许函数定义一类有效范围超出函数本身的变量，这类变量和定义在函数体之外的变量一样也有固定地址，因此，constexpr引用能绑定到这样的变量上，constexpr指针也能指向这样的变量</p></blockquote></li></ol><h3 id="2022年9月4日"><a href="#2022年9月4日" class="headerlink" title="2022年9月4日"></a>2022年9月4日</h3><ol><li><p>类型别名</p><blockquote><p>P60-61<br>传统定义类型别名用<code>typedef</code>，例：<code>typedef double wages;</code><br>C++11新标准定义使用别名声明，例：<code>using SI=Sales_item;</code><br><code>typedef char * pstring;</code>pstring是char*的别名，<code>const pstring cstr=0;</code>c是指向char的常量指针(这点容易搞混P61)</p></blockquote></li><li><p>auto类型说明符</p><blockquote><p>P61<br>C++11新标准引入<code>auto</code>类型说明符，用它能让编译器替我们去分析表达式所属的类型<br>auto定义的变量必须有初始值，auto能在一条语句中声明多个变量，该语句中所有变量的初始基本数据类型都必须一样<br>auto一般会忽略掉顶层const，保留底层const。用<code>const auto</code>变成顶层const。auto的引用会保留顶层const</p></blockquote></li><li><p>decltype类型指示符</p><blockquote><p>P62-63<br>C++11新标准引入<code>decltype</code>类型指示符，它的作用是选择并返回操作数的数据类型(包括顶层const和引用)<br><code>decltype((variable))</code>的结果永远是引用，<code>decltype((variable=variable))</code>的结果也是引用</p></blockquote></li><li><p>自定义数据结构</p><blockquote><p>P65<br>C++11新标准规定，可以为数据成员提供一个类内初始值</p></blockquote></li><li><p>预处理器</p><blockquote><p>P68<br>头文件保护符，<code>#define</code>指令把一个名字设定为预处理量， <code>ifdef</code>当且仅当变量已定义时为真，<code>ifndef</code>当且仅当变量未定义时为真，一旦结果为真，则执行后续操作直至遇到<code>#endif</code>指令为止</p></blockquote></li></ol><h3 id="本周tips-2"><a href="#本周tips-2" class="headerlink" title="本周tips"></a>本周tips</h3><ol><li><blockquote><p>赋值是会产生引用的一类典型表达式，引用的类型就是左值的类型。也就是说，如果i是int，则表达式i&#x3D;x的类型是int&amp;，所以<code>decltype((variable=variable))</code>的结果也是引用</p></blockquote></li></ol><br><h2 id="第五周-第六周"><a href="#第五周-第六周" class="headerlink" title="第五周-第六周"></a>第五周-第六周</h2><h3 id="复习·本周评语"><a href="#复习·本周评语" class="headerlink" title="复习·本周评语"></a>复习·本周评语</h3><blockquote><p>类的实例叫对象（比如class A; A a;)这里a就是对象，类型为class A。int，char这些是内置变量类型，不叫对象，因为不是类的实例。c++是c语言的扩展，c语言是没有类跟对象的概念的，但依然有int char 这些内置变量类型。指针变量也是变量，即内存上的一个位置，里面存放的是一个内存地址，仅此而已，至于编译器怎么理解这个地址，就看指针的类型了，如果是int<em>，那就表示这个地址往后4个字节存放的是一个int变量，如果是double</em>，那么就是这个地址往后8个字节是一个double变量，等等</p></blockquote><blockquote><p>const int i；是一个常量变量，咬文嚼字没必要的，他的意思就是告诉编译器这个i变量运行时不可改变，运行时只读（但实际上还是有无数种方法可以改掉），但是编译时不一定能确定它的值，如果编译时能100%确定应该用constexpr int i &#x3D; 100;这样就是编译时确认的常量。关于这个你跑一下下面这段代码，你会非常惊讶运算的结果</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> x = <span class="number">5</span>;</span><br><span class="line">   *(<span class="type">int</span> *)(&amp;x) = <span class="number">6</span>; <span class="comment">// Still OK! 只处用x的「只读」语义，去除const后可写</span></span><br><span class="line">   cout &lt;&lt; x &lt;&lt; endl; <span class="comment">// 此处绝大多数（所有？）C++编译器会输出5！！</span></span><br><span class="line">                      <span class="comment">// （然而，如果用一个C编译器来编译类似代码，一定输出6）</span></span><br><span class="line">   <span class="type">const</span> <span class="type">int</span>* p = &amp;x;</span><br><span class="line">   cout &lt;&lt; *p; <span class="comment">// 此处，大多数C++编译器输出6</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>const在c++里面有常量跟只读两层含义，容易产生混淆，c++新标准推荐常量用constexpr，只读用const，这样可以清晰明了很多<br>“自定义类、IO库、string类型则不属于字面值类型，不能被定义成constexpr”这句话可以归纳成一句，类（class）不属于字面值类型，io库，string只不过是c++库帮你写好的类（class）而已，类的对象有特殊的逻辑，后面你会学到，所以不能用constexpr</p></blockquote><br><h2 id="第七周"><a href="#第七周" class="headerlink" title="第七周"></a>第七周</h2><h3 id="2022年9月25日"><a href="#2022年9月25日" class="headerlink" title="2022年9月25日"></a>2022年9月25日</h3><ol><li><p>命名空间using声明</p><blockquote><p>P74<br>头文件不应包含using声明</p></blockquote></li><li><p>直接初始化和拷贝初始化</p><blockquote><p>P76<br>如果使用等号(&#x3D;)初始化一个变量，实际上执行的是拷贝初始化，编译器把等号右侧的初始值拷贝到新创建的对象中去<br>如果不使用等号，则执行的是直接初始化</p></blockquote></li><li><p>string对象上的操作</p><blockquote><p>P77-81<br>string的操作(P77)<br>使用&gt;&gt;执行读取操作时，string对象会自动忽略开头的空白(空格符、换行符、制表符)，并从第一个真正的字符开始读起，直到遇见下一处空白为止<br>“getline函数”的参数是一个输入流和一个string对象，函数从给定的输入流中读入内容，直到遇到换行符为止(注意换行符也被读进来了)，然后把所读的内容存入到那个string对象中去(注意不存换行符)<br>“size函数”返回的是一个string::size_type类型的值，这是一种无符号类型，不能与带符号类型混用<br>当把string对象和字符字面值及字符串字面值混在一条语句中使用时，必须确保每个加法运算符(+)的两侧运算对象至少一个是string。<code>string s = s1 + &quot;,&quot; + &quot;asd&quot;</code>合法(原理和连续输入连续输出一样)</p></blockquote></li></ol><br><h2 id="第八周"><a href="#第八周" class="headerlink" title="第八周"></a>第八周</h2><h3 id="2022年10月1日"><a href="#2022年10月1日" class="headerlink" title="2022年10月1日"></a>2022年10月1日</h3><ol><li><p>处理String对象中的字符</p><blockquote><p>P82<br>cctype头文件中的函数(P82)</p></blockquote></li><li><p>“范围for语句”处理String对象中的字符</p><blockquote><p>P82-83<br>如果想要改变string对象中字符的值，必须把循环变量定义成引用类型</p></blockquote></li><li><p>“下标运算符”处理String对象中的字符</p><blockquote><p>P84-85<br>下标运算符<code>[]</code>接受的输入参数是<code>string::size_type</code>类型的值</p></blockquote></li></ol><h3 id="2022年10月2日"><a href="#2022年10月2日" class="headerlink" title="2022年10月2日"></a>2022年10月2日</h3><ol><li><p>标准库类型vector</p><blockquote><p>P86-89<br>“实例化”，编译器根据模板创建类或者函数的过程。当使用模板时，需要指出编译器应把类或函数实例化成何种类型<br>初始化vector对象的方法(P87)<br>各种初始化的区别(P88)<br>vector对象支持列表初始化，使用圆括号提供的值可以说是用来构造vector对象的，使用花括号则是列表初始化，但当花括号里的值无法初始化vector对象则会变成构造vector对象</p></blockquote></li><li><p>向vector对象中添加元素</p><blockquote><p>P90-91<br>vector对象能高效增长(P91)<br>如果循环体内部包含有向vector对象添加元素的语句，则不能使用范围for循环，具体原因见(P168)</p></blockquote></li></ol><h3 id="本周tips-3"><a href="#本周tips-3" class="headerlink" title="本周tips"></a>本周tips</h3><ol><li><blockquote><p><code>cout</code>不被认为是C++关键字，如果定义一个名为<code>cout</code>的变量可能引发难以排查的错误</p></blockquote></li><li><blockquote><p>C++标准库兼容了C语言的标准库，C++将这些标准库命名为”c’name’”，在cname的头文件中定义的名字从属于命名空间std，而(将cname定义成).h头文件中的则不然(P82)</p></blockquote></li><li><blockquote><p><code>&amp;&amp;</code>逻辑与运算符，C++语言规定只有当左侧运算对象为真时才会检测右侧运算对象的情况(P85)</p></blockquote></li></ol><br><h2 id="第九周"><a href="#第九周" class="headerlink" title="第九周"></a>第九周</h2><h3 id="2022年10月4日"><a href="#2022年10月4日" class="headerlink" title="2022年10月4日"></a>2022年10月4日</h3><ol><li>其他vector操作<blockquote><p>P91-94<br>其他vector操作(P91)<br>vector对象(以及string对象)的下标运算符可用于访问已存在的元素，而不能用于添加元素<br>通过下标访问不存在的元素不会被编译器发现，在运行时会产生缓冲区溢出的错误，解决的方法是尽可能使用”范围for”语句</p></blockquote></li></ol><h3 id="2022年10月6日"><a href="#2022年10月6日" class="headerlink" title="2022年10月6日"></a>2022年10月6日</h3><ol><li><p>迭代器</p><blockquote><p>P95<br>对迭代器而言，其对象是容器中的元素或者string对象中的字符<br>迭代器有有效和无效之分，这一点和指针差不多。有效的迭代器或者指向某个元素，或者指向容器中尾元素的下一位置，其他所有情况都属于无效<br>“begin成员”负责返回指向第一个元素(或第一个字符)的迭代器<br>“end成员”负责返回指向容器(或string对象)尾元素的下一位置的迭代器，该迭代器指示的是一个本不存在的尾后元素<br>end成员指向的迭代器没有实际含义，仅是个标记，常被称为”尾后迭代器”或”尾迭代器”。如果容器为空，则begin和end返回的是同一个迭代器，都是尾后迭代器</p></blockquote></li><li><p>迭代器运算符</p><blockquote><p>P96<br>标准容器迭代器的运算符(P96)</p></blockquote></li></ol><h3 id="2022年10月7日"><a href="#2022年10月7日" class="headerlink" title="2022年10月7日"></a>2022年10月7日</h3><ol><li><p>将迭代器从一个元素移动到另一个元素</p><blockquote><p>P96-97<br>泛型编程(P97)<br>for循环中用!&#x3D;、&#x3D;&#x3D;而非&lt;，因为所有标准库容器的迭代器都定义了&#x3D;&#x3D;和!&#x3D;，但是它们中的大多数都没有定义&lt;运算符<br>因此，只要我们养成使用迭代器和!&#x3D;的习惯，就不用太在意用的到底是哪种容器类型<br><code>for (auto it = s.begin(); it != s.end() &amp;&amp; !isspace(*it); ++it)</code></p></blockquote></li><li><p>迭代器类型</p><blockquote><p>P97<br>拥有迭代器的标准库类型(严格来说，string对象不属于容器类型)使用<code>iterator</code>和<code>const_iterator</code>来表示迭代器类型<br>iterator能读写对象中的元素，const_iterator只能读取对象中的对象。如果vector对象或string对象是一个常量，只能使用const_iterator，如果不是常量，两者都能用<br>术语：迭代器和迭代器类型(P97)</p></blockquote></li><li><p>begin和end运算符</p><blockquote><p>P98<br>C++11新标准引入了两个新函数，分别是cbegin和cend。不论vector对象或string对象本身是否是常量，返回值都是const_iterator<br>如果对象只需读操作而无须写操作的话最好使用常量类型(const_iterator)(P191)</p></blockquote></li><li><p>结合解引用和成员访问操作</p><blockquote><p>P98<br>解引用迭代器可获得迭代器所指的对象，如果该对象的类型恰好是类，就有可能希望进一步访问它的成员<br><code>(*it).empty()</code>，该表达式的含义是先对it解引用，然后解引用的结果再执行点运算符<br>(*it).empty()的圆括号必不可少，具体原因见(P121)<br>“箭头运算符<code>-&gt;</code>“，把解引用和成员访问两个操作结合在一起，it-&gt;mem等于(*it).mem</p></blockquote></li></ol><br><div class="note warning simple"><p>计划有变，暂缓学习</p></div><p><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Onektas的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番剧鉴赏记录列表</title>
      <link href="/posts/7a9e2fe6/"/>
      <url>/posts/7a9e2fe6/</url>
      
        <content type="html"><![CDATA[<h2 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h2><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.03</p></div></div><div class='timeline-item-content'><p><a href="#%E5%BD%BB%E5%A4%9C%E4%B9%8B%E6%AD%8C">彻夜之歌</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.09.05</p></div></div><div class='timeline-item-content'><p><a href="#3-%E6%97%A0%E8%81%8C%E8%BD%AC%E7%94%9F%EF%BD%9E%E5%9C%A8%E5%BC%82%E4%B8%96%E7%95%8C%E8%AE%A4%E7%9C%9F%E5%9C%B0%E6%B4%BB%E4%B8%8B%E5%8E%BB%EF%BD%9E">无职转生～在异世界认真地活下去～ </a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.06.25</p></div></div><div class='timeline-item-content'><p><a href="#%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BD">辉夜大小姐想让我告白 第三季</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.03.24</p></div></div><div class='timeline-item-content'><p><a href="#%E6%97%A0%E5%A4%B4%E9%AA%91%E5%A3%AB%E5%BC%82%E9%97%BB%E5%BD%95">无头骑士异闻录</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.03.01</p></div></div><div class='timeline-item-content'><p><a href="#%E8%B5%9B%E9%A9%AC%E5%A8%98-Pretty-Derby-2">赛马娘 Pretty Derby 2</a></p></div></div></div><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2021</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.11.01</p></div></div><div class='timeline-item-content'><p><a href="#MEGALO-BOX-%E8%A3%85%E7%94%B2%E9%87%8D%E6%8B%B3">MEGALO BOX 装甲重拳</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.10.05</p></div></div><div class='timeline-item-content'><p><a href="#%E9%BD%90%E6%9C%A8%E6%A5%A0%E9%9B%84%E7%9A%84%E7%81%BE%E9%9A%BE">齐木楠雄的灾难</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.09.22</p></div></div><div class='timeline-item-content'><p><a href="#%E5%85%B3%E4%BA%8E%E6%88%91%E8%BD%AC%E7%94%9F%E5%8F%98%E6%88%90%E5%8F%B2%E8%8E%B1%E5%A7%86%E8%BF%99%E6%A1%A3%E4%BA%8B">关于我转生变成史莱姆这档事 第二季</a></p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.08.24</p></div></div><div class='timeline-item-content'><p><a href="#%E6%95%A3%E5%8D%8E%E7%A4%BC%E5%BC%A5">散华礼弥</a></p></div></div></div><br><h2 id="纪念之座"><a href="#纪念之座" class="headerlink" title="纪念之座"></a>纪念之座</h2><h3 id="你的名字。"><a href="#你的名字。" class="headerlink" title="你的名字。"></a>你的名字。</h3><div class="note default simple"><p>原作：原创<br>剧集：剧场版</p></div><br><h3 id="中二病也要谈恋爱"><a href="#中二病也要谈恋爱" class="headerlink" title="中二病也要谈恋爱!"></a>中二病也要谈恋爱!</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OVA、第二季、剧场版</p></div><br><h3 id="Fate系列"><a href="#Fate系列" class="headerlink" title="Fate系列"></a>Fate系列</h3><div class="note default simple"><p>原作：轻改、漫改、原创、游戏改<br>剧集：ALL</p></div><br><h2 id="专属之座"><a href="#专属之座" class="headerlink" title="专属之座"></a>专属之座</h2><h3 id="0-Little-Busters"><a href="#0-Little-Busters" class="headerlink" title="0. Little Busters!"></a>0. Little Busters!</h3><div class="note default simple"><p>原作：游戏改<br>剧集：第一季、第二季、OVA</p></div><br><h3 id="1-寄生兽-生命的准则"><a href="#1-寄生兽-生命的准则" class="headerlink" title="1. 寄生兽 生命的准则"></a>1. 寄生兽 生命的准则</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="2-NO-GAME-NO-LIFE-游戏人生"><a href="#2-NO-GAME-NO-LIFE-游戏人生" class="headerlink" title="2. NO GAME NO LIFE 游戏人生"></a>2. NO GAME NO LIFE 游戏人生</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、剧场版</p></div><br><h3 id="3-无职转生～在异世界认真地活下去～"><a href="#3-无职转生～在异世界认真地活下去～" class="headerlink" title="3. 无职转生～在异世界认真地活下去～"></a>3. 无职转生～在异世界认真地活下去～</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季</p></div><br><h3 id="4-狼与香辛料"><a href="#4-狼与香辛料" class="headerlink" title="4. 狼与香辛料"></a>4. 狼与香辛料</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、第二季</p></div><br><h3 id="5-青春猪头少年不会梦到兔女郎学姐"><a href="#5-青春猪头少年不会梦到兔女郎学姐" class="headerlink" title="5. 青春猪头少年不会梦到兔女郎学姐"></a>5. 青春猪头少年不会梦到兔女郎学姐</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、剧场版</p></div><br><h2 id="京都动画"><a href="#京都动画" class="headerlink" title="京都动画"></a>京都动画</h2><h3 id="紫罗兰永恒花园"><a href="#紫罗兰永恒花园" class="headerlink" title="紫罗兰永恒花园"></a>紫罗兰永恒花园</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OVA</p></div><br><h3 id="CLANNAD"><a href="#CLANNAD" class="headerlink" title="CLANNAD"></a>CLANNAD</h3><div class="note default simple"><p>原作：游戏改<br>剧集：第一季、第二季、OVA1、OVA2</p></div><br><h3 id="冰菓"><a href="#冰菓" class="headerlink" title="冰菓"></a>冰菓</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季</p></div><br><h2 id="钉宫四萌"><a href="#钉宫四萌" class="headerlink" title="钉宫四萌"></a>钉宫四萌</h2><h3 id="龙与虎"><a href="#龙与虎" class="headerlink" title="龙与虎"></a>龙与虎</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OVA</p></div><br><h3 id="零之使魔"><a href="#零之使魔" class="headerlink" title="零之使魔"></a>零之使魔</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、第二季、第三季、OVA、第四季</p></div><br><h2 id="奇幻-x2F-都市-x2F-怪谈·清新"><a href="#奇幻-x2F-都市-x2F-怪谈·清新" class="headerlink" title="奇幻&#x2F;都市&#x2F;怪谈·清新"></a>奇幻&#x2F;都市&#x2F;怪谈·清新</h2><h3 id="野良神"><a href="#野良神" class="headerlink" title="野良神"></a>野良神</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、OAD1-2、第二季、OAD3-4</p></div><br><h3 id="无头骑士异闻录"><a href="#无头骑士异闻录" class="headerlink" title="无头骑士异闻录"></a>无头骑士异闻录</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、第二季</p></div><br><h3 id="散华礼弥"><a href="#散华礼弥" class="headerlink" title="散华礼弥"></a>散华礼弥</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="彻夜之歌"><a href="#彻夜之歌" class="headerlink" title="彻夜之歌"></a>彻夜之歌</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h2 id="奇幻-x2F-科幻·热血"><a href="#奇幻-x2F-科幻·热血" class="headerlink" title="奇幻&#x2F;科幻·热血"></a>奇幻&#x2F;科幻·热血</h2><h3 id="赛马娘-Pretty-Derby-2"><a href="#赛马娘-Pretty-Derby-2" class="headerlink" title="赛马娘 Pretty Derby 2"></a>赛马娘 Pretty Derby 2</h3><div class="note default simple"><p>原作：原创<br>剧集：第二季</p></div><br><h3 id="进击的巨人"><a href="#进击的巨人" class="headerlink" title="进击的巨人"></a>进击的巨人</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、第二季、第三季、第四季Part.1</p></div><br><h3 id="约定的梦幻岛"><a href="#约定的梦幻岛" class="headerlink" title="约定的梦幻岛"></a>约定的梦幻岛</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="MEGALO-BOX-装甲重拳"><a href="#MEGALO-BOX-装甲重拳" class="headerlink" title="MEGALO BOX 装甲重拳"></a>MEGALO BOX 装甲重拳</h3><div class="note default simple"><p>原作：原创<br>剧集：第一季、第二季</p></div><br><h3 id="Dr-STONE-石纪元"><a href="#Dr-STONE-石纪元" class="headerlink" title="Dr.STONE 石纪元"></a>Dr.STONE 石纪元</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、第二季</p></div><br><h3 id="斩·赤红之瞳"><a href="#斩·赤红之瞳" class="headerlink" title="斩·赤红之瞳!"></a>斩·赤红之瞳!</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h2 id="异世界·日常-x2F-搞笑"><a href="#异世界·日常-x2F-搞笑" class="headerlink" title="异世界·日常&#x2F;搞笑"></a>异世界·日常&#x2F;搞笑</h2><h3 id="魔女之旅"><a href="#魔女之旅" class="headerlink" title="魔女之旅"></a>魔女之旅</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季</p></div><br><h3 id="关于我转生变成史莱姆这档事"><a href="#关于我转生变成史莱姆这档事" class="headerlink" title="关于我转生变成史莱姆这档事"></a>关于我转生变成史莱姆这档事</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OAD、第二季</p></div><br><h3 id="为美好的世界献上祝福"><a href="#为美好的世界献上祝福" class="headerlink" title="为美好的世界献上祝福!"></a>为美好的世界献上祝福!</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OAD、第二季、剧场版</p></div><br><h2 id="校园·搞笑·日常"><a href="#校园·搞笑·日常" class="headerlink" title="校园·搞笑·日常"></a>校园·搞笑·日常</h2><h3 id="碧蓝之海"><a href="#碧蓝之海" class="headerlink" title="碧蓝之海"></a>碧蓝之海</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="齐木楠雄的灾难"><a href="#齐木楠雄的灾难" class="headerlink" title="齐木楠雄的灾难"></a>齐木楠雄的灾难</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、第二季、OVA1、OVA2</p></div><br><h3 id="在下坂本，有何贵干"><a href="#在下坂本，有何贵干" class="headerlink" title="在下坂本，有何贵干?"></a>在下坂本，有何贵干?</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="男子高中生的日常"><a href="#男子高中生的日常" class="headerlink" title="男子高中生的日常"></a>男子高中生的日常</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h2 id="校园·恋爱·搞笑"><a href="#校园·恋爱·搞笑" class="headerlink" title="校园·恋爱·搞笑"></a>校园·恋爱·搞笑</h2><h3 id="辉夜大小姐想让我告白"><a href="#辉夜大小姐想让我告白" class="headerlink" title="辉夜大小姐想让我告白?"></a>辉夜大小姐想让我告白?</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、第二季、第三季</p></div><br><h3 id="伪恋"><a href="#伪恋" class="headerlink" title="伪恋"></a>伪恋</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、第二季</p></div><br><h3 id="徒然喜欢你"><a href="#徒然喜欢你" class="headerlink" title="徒然喜欢你"></a>徒然喜欢你</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h3 id="GAMERS电玩咖"><a href="#GAMERS电玩咖" class="headerlink" title="GAMERS电玩咖"></a>GAMERS电玩咖</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季</p></div><br><h3 id="理科生坠入情网，故尝试证明。"><a href="#理科生坠入情网，故尝试证明。" class="headerlink" title="理科生坠入情网，故尝试证明。"></a>理科生坠入情网，故尝试证明。</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季</p></div><br><h2 id="校园·日常·治愈"><a href="#校园·日常·治愈" class="headerlink" title="校园·日常·治愈"></a>校园·日常·治愈</h2><h3 id="我的青春恋爱物语果然有问题"><a href="#我的青春恋爱物语果然有问题" class="headerlink" title="我的青春恋爱物语果然有问题"></a>我的青春恋爱物语果然有问题</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季、OVA、第二季、OVA2、第三季</p></div><br><h3 id="四月是你的谎言"><a href="#四月是你的谎言" class="headerlink" title="四月是你的谎言"></a>四月是你的谎言</h3><div class="note default simple"><p>原作：漫改<br>剧集：第一季、OAD</p></div><br><h3 id="樱花庄的宠物女孩"><a href="#樱花庄的宠物女孩" class="headerlink" title="樱花庄的宠物女孩"></a>樱花庄的宠物女孩</h3><div class="note default simple"><p>原作：轻改<br>剧集：第一季</p></div><br><h2 id="日常·清新"><a href="#日常·清新" class="headerlink" title="日常·清新"></a>日常·清新</h2><h3 id="月色真美"><a href="#月色真美" class="headerlink" title="月色真美"></a>月色真美</h3><div class="note default simple"><p>原作：原创<br>剧集：第一季</p></div><br><br>]]></content>
      
      
      <categories>
          
          <category> Onektas的时间轴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACG </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单使用PowerShell实现Win10自动关机</title>
      <link href="/posts/cef93e60/"/>
      <url>/posts/cef93e60/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note default simple"><p>之前的学校23点断电，24点断网，那时为了节约流量，就用笔记本电脑共享Wi-Fi。每早需要有人按开关寝室才通电，而笔记本的电池无法撑过一个晚上，于是就有了”每天到点自动关机，关机时可以由我选择是否继续使用”这样的需求，也就有了这篇文章。现在我所在的学校，反而是23点断网，不断电，不过，这篇文章对我而言还是相当实用</p></div><br><h2 id="打开”Powershell-ISE”，输入如下代码并保存脚本"><a href="#打开”Powershell-ISE”，输入如下代码并保存脚本" class="headerlink" title="打开”Powershell ISE”，输入如下代码并保存脚本"></a>打开”Powershell ISE”，输入如下代码并保存脚本</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 结合任务计划程序，在每日0点自动打开此脚本，弹出提示框</span></span><br><span class="line"><span class="comment">## 点击确定-60秒后关机；点击取消-取消关机；不选择-61秒后关机</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 引入选择框</span></span><br><span class="line"><span class="variable">$ws</span> = <span class="built_in">New-Object</span> <span class="literal">-ComObject</span> WScript.Shell  </span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建选择框</span></span><br><span class="line"><span class="comment">## 格式为 $wsr = $ws.popup(&quot;提示内容&quot;,提示框自动关闭时间,&quot;提示框标题&quot;,1+64)</span></span><br><span class="line"><span class="variable">$wsr</span> = <span class="variable">$ws</span>.popup(<span class="string">&quot;是否自动关机？&quot;</span>,<span class="number">60</span>,<span class="string">&quot;提示&quot;</span>,<span class="number">1</span> + <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 选择语句</span></span><br><span class="line"><span class="comment">## 语义为 1确定-60秒后关机 2取消-取消关机 -1提示框自动关闭后-1秒后关机</span></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$wsr</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">1</span>&#123;shutdown <span class="literal">-s</span> <span class="literal">-t</span> <span class="number">60</span>&#125;</span><br><span class="line">    <span class="number">2</span>&#123;shutdown <span class="literal">-a</span>&#125;</span><br><span class="line">    <span class="literal">-1</span>&#123;shutdown <span class="literal">-s</span> <span class="literal">-t</span> <span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="打开”任务计划程序”"><a href="#打开”任务计划程序”" class="headerlink" title="打开”任务计划程序”"></a>打开”任务计划程序”</h2><div class="note default simple"><p>1.  右键”任务计划程序库”，选择”创建任务”</p></div><div class="note default simple"><p>2. 常规里：名称”随意”，描述”随意”，勾选”使用最高权限运行”，配置”Windows 10”</p></div><div class="note default simple"><p>3. 触发器里：新建并按需设置，例如我的”每日 在每天的0:00 已启用”</p></div><div class="note default simple"><p>4. 操作里：新建，程序或脚本”powershell”，添加参数”{程序路径}”，例如我的脚本在”C:\用户\10624\自动关机.ps1”，那么我的参数为”\Users\10624\自动关机.ps1”</p></div><div class="note default simple"><p>5. 条件里：按需设置，我取消了所有勾</p></div><div class="note default simple"><p>6. 设置里：按需设置，我保持默认</p></div><br><h2 id="测试，大功告成"><a href="#测试，大功告成" class="headerlink" title="测试，大功告成"></a>测试，大功告成</h2><div class="note default simple"><p>在任务计划程序库”里，右键–运行，测试程序是否正常，大功告成<br>若无法打开脚本，打开PowerShell(管理员)，输入<code>set-ExecutionPolicy RemoteSigned</code></p></div><p><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Onektas的各种笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网中高速互传Win与iOS、Win与Win的文件</title>
      <link href="/posts/1d4251e6/"/>
      <url>/posts/1d4251e6/</url>
      
        <content type="html"><![CDATA[<h2 id="Win-Win间互传"><a href="#Win-Win间互传" class="headerlink" title="Win-Win间互传"></a>Win-Win间互传</h2><div class="note default simple"><p>我们将使用Win10的SMB功能进行互传，SMB（ServerMessageBlock）协议是一种局域网文件共享传输协议，最初是IBM的贝瑞·费根鲍姆（Barry Feigenbaum）研制出用于DOS操作系统中的本地文件接口，后来微软对这个发展进行了重大更改</p></div><blockquote><p>此方式利用公网IPv4&#x2F;IPv6可远程互传</p></blockquote><br><h3 id="共享文件"><a href="#共享文件" class="headerlink" title="共享文件"></a>共享文件</h3><div class="note info simple"><p><strong>共享方</strong>选择需要分享的磁盘&#x2F;文件夹，<code>右键--属性--共享--高级共享</code>，勾选<code>共享此文件夹</code></p></div><br><h3 id="启用共享"><a href="#启用共享" class="headerlink" title="启用共享"></a>启用共享</h3><div class="note info simple"><p><strong>共享方</strong>打开<code>控制面板--网络和Internet--网络和共享中心--高级共享设置</code>，打开”专用”和”来宾或公用”中的<code>启用文件和打印机共享</code>，其余按需设置或保持默认</p></div><br><h3 id="添加Everyone账户"><a href="#添加Everyone账户" class="headerlink" title="添加Everyone账户"></a>添加Everyone账户</h3><div class="note info simple"><p>如果<strong>访问方</strong>和<strong>共享方</strong>登入了相同的微软账户，可以跳过这一步<br>如果使用的是本地账户或者不同的微软账户：<strong>共享方</strong>选择需要分享的磁盘&#x2F;文件夹，<code>右键--属性--安全--编辑--添加</code>输入”Everyone”并确定，再按需修改Everyone的权限<br>如果共享的是文件夹，需要额外<code>右键--属性--共享--添加Everyone--按需修改权限</code></p></div><br><h3 id="加入共享"><a href="#加入共享" class="headerlink" title="加入共享"></a>加入共享</h3><div class="note info simple"><p><strong>共享方</strong>打开<code>任务管理器--性能</code>，在<code>以太网</code>或<code>Wi-Fi</code>中找到你的IPv4地址<br><strong>访问方</strong><code>Win+R</code>输入<code>\\IPv4</code>，或者在”我的电脑”上方的地址栏输入，例如<code>\\172.20.10.1</code>，即可访问共享的磁盘&#x2F;文件夹</p></div><div class="note info simple"><p>若需要账户密码，则需要共享方提供微软账户或者本地账户<br>若不想要登入使用，打开<code>控制面板--网络和Internet--网络和共享中心--高级共享设置</code>，在”所有网络”中，选择<code>无密码保护的共享</code></p></div><br><br><h2 id="Win-iOS间互传"><a href="#Win-iOS间互传" class="headerlink" title="Win-iOS间互传"></a>Win-iOS间互传</h2><div class="note default simple"><p>iOS13开始，文件App支持SMB协议，不过我们选择别的方式，只需一根数据线即可高速互传</p></div><blockquote><p>SMB方式利用公网IPv4&#x2F;IPv6可远程互传</p></blockquote><br><h3 id="Xender法"><a href="#Xender法" class="headerlink" title="Xender法"></a>Xender法</h3><div class="note info simple"><p>1. AppStore中下载”Xender”<br>2. 关闭”Wi-Fi”，打开”蜂窝网络”和”个人热点”，连上数据线，你的电脑会自动识别到iPhone有线网络，若识别不到请先断开电脑的网络<br>3. 打开”Xender”按提示操作，此方法不消耗流量，峰值速度在37.5MB&#x2F;S左右</p></div><br><h3 id="爱思助手法"><a href="#爱思助手法" class="headerlink" title="爱思助手法"></a>爱思助手法</h3><div class="note info simple"><p>1. 电脑上下载爱思助手<br>2. 连接爱思助手，在左侧的”应用游戏”(不是上侧)，只要是带”浏览”操作的App，都可以直接导入任意文件到手机，此方法峰值速度在30MB&#x2F;s左右</p></div><br><br>]]></content>
      
      
      <categories>
          
          <category> Onektas的各种笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅搭建Minecraft服务器</title>
      <link href="/posts/2c3c6d6b/"/>
      <url>/posts/2c3c6d6b/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note default simple"><p>本文为之前所有Minecraft笔记的集合，仅供参考，内容包含<a href="#%E8%81%94%E6%9C%BA">联机</a>、<a href="#%E5%9C%A8Windows%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8">在Windows上搭建服务器</a>、<a href="#%E5%9C%A8Linux%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8">在Linux上搭建服务器</a>、<a href="#%E5%9C%A8Android%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8">在Android上搭建服务器</a>、<a href="#%E6%95%88%E7%8E%87%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%99%A8">效率化服务器</a>，适用于Java版Minecraft</p></div><br><h2 id="联机"><a href="#联机" class="headerlink" title="联机"></a>联机</h2><div class="note default simple"><p>如果只是希望联机，而不是搭建服务器，可以选择以下两种方式</p></div><h3 id="局域网联机"><a href="#局域网联机" class="headerlink" title="局域网联机"></a>局域网联机</h3><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>1. 连接同一Wi-Fi(或手机热点)，使双方在同一个局域网内<br>2. 开存档方在游戏内打开”对局域网开放”，加入方在”多人游戏”内加入房间</p></div><h3 id="远程联机"><a href="#远程联机" class="headerlink" title="远程联机"></a>远程联机</h3><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>远程联机的方式主要分为三类：<br>1. V*N类：游侠对战平台、自建V*N等<br>2. 内网穿透类：樱花穿透、琉璃frp、nps、zerotier等<br>3. 公网类：IPv4公网、IPv6公网<br>4. 启动器联机类：现在许多启动器提供联机服务</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>1. 游侠对战平台：双方加入同一个游侠房间，使用游侠启动MC，即可达到局域网效果，难度低成功率较高<br>2. 樱花穿透：使用比琉璃frp简单些，将”对局域网开放”的端口映射，加入方使用映射后的IP在”多人游戏”内添加服务器加入，难度中成功率高<br>3. 公网类：IPv4需要路由器桥接光猫激活端口映射，IPv6可直接使用，IPv4难度高成功率较低</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>内网穿透类和公网类碰到的MC端口变化问题，可以打联机类的Mod解决<br>IPv6需要光猫和路由器支持，并在”控制面板-网络和Internet-网络和共享中心-更改适配器设置”中启用IPv6功能<br>IPv4联机格式”IPv4:端口号”；IPv6联机格式”[IPv6]:端口号”<br>192、172开头的IPv4必为内网；fe80开头的IPv6必为内网</p></div><br><h2 id="在Windows上搭建服务器"><a href="#在Windows上搭建服务器" class="headerlink" title="在Windows上搭建服务器"></a>在Windows上搭建服务器</h2><div class="note default simple"><p>个人喜欢使用官方服务端+Forge&#x2F;Fabric</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>下载所需<a href="https://mcversions.net/">服务端</a><br>不同的服务端需要不同的Java版本</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>1. 打开服务端文件，会自动生成一些文件<br>2. 再打开<code>eula.txt</code>，把”false”改成”true”<br>3. 按喜好更改<a href="https://minecraft-zh.gamepedia.com/Server.properties">server.properties</a><br>4. 安装<a href="https://files.minecraftforge.net/net/minecraftforge/forge/">Forge</a>\<a href="https://fabricmc.net/">Fabric</a><br>5. 加入服务器方式参考<a href="#%E8%81%94%E6%9C%BA">联机</a>部分，建议使用内网穿透和公网方案</p></div><br><h2 id="在Linux上搭建服务器"><a href="#在Linux上搭建服务器" class="headerlink" title="在Linux上搭建服务器"></a>在Linux上搭建服务器</h2><div class="note default simple"><p>个人喜欢使用官方服务端+Forge&#x2F;Fabric<br>可以直接将在Windows上搭建好的MC服务器拷贝到Linux里使用</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>推荐工具：Xshell、Xftp<br>推荐系统：CentOS<br>云服务器推荐：阿里云、腾讯云学生优惠</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>下载所需<a href="https://mcversions.net/">服务端</a><br>不同的服务端需要不同的Java版本</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>安装Java(默认版本)</p><ol><li>yum install java -y # RHEL、CentOS</li><li>apt-get install java -y # Debian、Ubuntu</li></ol><p>安装screen，方便将MC服务器挂载至后台</p><ol><li>yum install screen -y  # RHEL、CentOS</li><li>apt-get install screen -y # Debian、Ubuntu</li></ol></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>1. 打开服务器，命令示例：<code>java -Xmx1024M -Xms1024M -jar minecraft_server.1.19.jar nogui</code><br>2. 打开<code>eula.txt</code>，将”false”改成”true”<br>3. 按喜好更改<a href="https://minecraft-zh.gamepedia.com/Server.properties">server.properties</a><br>4. 安装Forge，命令示例：<code>java -jar forge-1.19-installer.jar nogui --installServer</code><br>5. 安装Fabric，命令示例：<code>java -jar fabric.jar nogui</code><br>6. 加入服务器方式参考<a href="#%E8%81%94%E6%9C%BA">联机</a>部分，建议使用内网穿透和公网方案</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p><code>screen -S name</code>，例：<code>screen -S mc</code>，创建一个新screen窗口(注意-S大写)<br>screen窗口内<code>java -Xmx1024M -Xms1024M -jar minecraft_server.1.19.jar nogui</code>打开服务器，再<code>Ctrl+A+D</code>，返回原先窗口<br><code>screen -ls</code>查看已创建的screen窗口<br><code>screen -r ID</code>进入screen窗口<br><code>screen -XS ID quit</code>关闭screen窗口</p></div><br><h2 id="在Android上搭建服务器"><a href="#在Android上搭建服务器" class="headerlink" title="在Android上搭建服务器"></a>在Android上搭建服务器</h2><div class="note default simple"><p>各大应用商店下载Aid Learning(Linux)<br>浏览器中8000端口连接图形界面，8080端口连接文件界面，支持远程连接<br>因为本质是Linux搭建，服务器搭建操作参考<a href="#%E5%9C%A8Linux%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8">在Linux上搭建服务器</a></p></div><br><h2 id="效率化服务器"><a href="#效率化服务器" class="headerlink" title="效率化服务器"></a>效率化服务器</h2><div class="note default simple"><p>云服务器Linux简单使用远程git gui</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>yum install git -y  # 安装Git<br>yum install git-gui -y  # 安装Git GUI<br>yum install xorg-x11-xauth -y  # 安装x11</p></div><br><div class="note default simple"><p>服务器自动备份</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###### 参考脚本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;==========开始Git版本控制MCServer==========&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入服务器目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/MCServer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断，若无新数据则跳过备份，若有新数据则进行备份</span></span><br><span class="line">clean=`git status`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;clean&#125;</span> =~ <span class="string">&#x27;clean&#x27;</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27;服务器未产生新数据&#x27;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27;==========等待下次自动备份==========&#x27;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   git add .</span><br><span class="line">   git commit -m Automatic</span><br><span class="line">   git push</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27;==========已完成自动备份==========&#x27;</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>服务器性能监控</p></div><div class="note icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>使用<a href="https://github.com/lincanbin/Holy-Lance">Holy Lance</a>，本质是个PHP网页，建议用宝塔面板搭建，注意宝塔面板自带防火墙</p></div><p><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Onektas的各种笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅从零开始建博客</title>
      <link href="/posts/a3236ad6/"/>
      <url>/posts/a3236ad6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note default simple"><p>这一次的博客，简洁实用为主，记录笔记为主，畅所记录，完全从零搭建。我删除了曾经的所有内容，所有旧项目归档保存不再发布，从零打造新博客</p></div><br><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><div class="note default simple"><p>博客搭建全程使用Git进行版本控制</p></div><div class="note default simple"><p>下载安装Git、Node.js</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新建文件夹作为博客根目录</span><br><span class="line">npm config set registry https://registry.npm.taobao.org // 更换npm源为阿里云镜像源</span><br><span class="line">npm config get registry // 确认源</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="安装Hexo及基础插件"><a href="#安装Hexo及基础插件" class="headerlink" title="安装Hexo及基础插件"></a>安装Hexo及基础插件</h2><div class="note default simple"><p>博客根目录</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g // 安装Hexo指令集</span><br><span class="line">hexo init // 初始化Hexo</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;&quot; // 设置Git邮箱</span><br><span class="line">git config --global user.name &quot;&quot; // 设置Git用户名</span><br><span class="line"></span><br><span class="line">git init // 初始化Git仓库</span><br><span class="line">git branch -m master main // 更改branch名为main</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-sitemap --save // 安装sitemap生成插件(此插件可在安装主题步骤安装)</span><br><span class="line">npm install hexo-deployer-git --save // 安装git部署插件</span><br><span class="line">npm install // 确保所有插件正常安装</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h2><div class="note default simple"><p>博客根目录</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱&quot; // 创建公钥</span><br><span class="line">less ~/.ssh/id_rsa.pub // 查看公钥</span><br><span class="line"></span><br><span class="line">&quot;Github——头像——Settings——SSH and GPG keys——添加SSH key&quot;</span><br><span class="line"></span><br><span class="line">ssh -T git@github.com // 测试公钥</span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>Hexo配置文件</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:Onektas/Onektas.github.io.git,main</span></span><br></pre></td></tr></table></figure><br><br><h2 id="安装Butterfly主题"><a href="#安装Butterfly主题" class="headerlink" title="安装Butterfly主题"></a>安装Butterfly主题</h2><div class="note default simple"><p>按喜好配置</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://butterfly.js.org/posts/21cfbf15/</span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>推荐的插件</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo-abbrlink</span><br><span class="line">hexo-filter-nofollow</span><br><span class="line">hexo-generator-sitemap</span><br></pre></td></tr></table></figure><br><br><h2 id="网站美化"><a href="#网站美化" class="headerlink" title="网站美化"></a>网站美化</h2><div class="note default simple"><p>根目录\themes\butterfly\source\css，创建”custom.css”</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条美化 */</span></span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ::-webkit-scrollbar-track &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">177</span>, <span class="number">245</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>( <span class="number">45deg</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>, transparent <span class="number">25%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>, transparent <span class="number">75%</span>, transparent);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ::-webkit-scrollbar-corner &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ::-moz-selection &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标指针美化 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur</span>), default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span>), default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 弹窗description */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: inherit;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">780px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">3%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-title);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">177</span>, <span class="number">245</span>, <span class="number">0.8</span>);</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: .<span class="number">7rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&gt;<span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>Butterfly配置文件</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><br><br><h2 id="全网独家的一图流"><a href="#全网独家的一图流" class="headerlink" title="全网独家的一图流"></a>全网独家的一图流</h2><div class="note default simple"><p>Butterfly配置文件</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_top_img:</span> <span class="string">&#x27;#00000000&#x27;</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>custom.css，文章Front-matter需添加<code>top_img: &#39;#00000000&#39;</code></p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 一图流附属样式 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.not-top-img</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#00000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#00000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h2><div class="note default simple"><p>根目录\.github\workflows，创建”任意名字.yml”</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        git config --global user.name &quot;Onektas&quot;</span></span><br><span class="line"><span class="string">        git config --global user.email &quot;xxx@qq.com&quot;</span></span><br><span class="line"><span class="string">        git clone https://github.com/Onektas/Onektas.github.io.git .deploy_git</span></span><br><span class="line"><span class="string">        hexo deploy</span></span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>创建token，”Github——头像——Settings——Developer settings——Personal access tokens”名字任意，时间无限，权限勾选<code>repo</code></p></div><br><div class="note default simple"><p>Hexo配置文件</p></div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://Onektas:&#123;&#123;token&#125;&#125;@github.com/Onektas/Onektas.github.io.git,main</span> <span class="string">//</span> <span class="string">花括号去掉</span></span><br></pre></td></tr></table></figure><br><br><h2 id="Vercel加速"><a href="#Vercel加速" class="headerlink" title="Vercel加速"></a>Vercel加速</h2><div class="note default simple"><p>注册Vercel，加速项目，更换域名，记得更改GitHub的项目页面右侧About的链接；根目录\source，创建”CNAME”</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onektas.top</span><br></pre></td></tr></table></figure><br><div class="note default simple"><p>根目录\source，创建”robots.txt”</p></div><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow:</span><br><span class="line"></span><br><span class="line">Sitemap: https://onektas.top/sitemap.xml</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><div class="note default simple"><p><a href="https://github.com/Onektas/ImageHost">https://github.com/Onektas/ImageHost</a> ，使用Vercel加速，胜在图片链接可控</p></div><br><h2 id="博客恢复"><a href="#博客恢复" class="headerlink" title="博客恢复"></a>博客恢复</h2><div class="note default simple"><p>安装Git、Node.js</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">视情况可省略步骤</span></span><br><span class="line"></span><br><span class="line">新建文件夹作为博客根目录</span><br><span class="line">npm config set registry https://registry.npm.taobao.org // 更换npm源为阿里云镜像源</span><br><span class="line">npm config get registry // 确认源</span><br><span class="line"></span><br><span class="line">npm install hexo-cli -g // 安装Hexo指令集</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;&quot; // 设置Git邮箱</span><br><span class="line">git config --global user.name &quot;&quot; // 设置Git用户名</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;邮箱&quot; // 创建公钥</span><br><span class="line">less ~/.ssh/id_rsa.pub // 查看公钥</span><br><span class="line">&quot;Github——头像——Settings——SSH and GPG keys——添加SSH key&quot;</span><br><span class="line">ssh -T git@github.com // 测试公钥</span><br><span class="line"></span><br><span class="line">git clone https://github.com/Onektas/BlogSource // 拉取博客源码</span><br><span class="line"></span><br><span class="line">npm install // 安装插件</span><br></pre></td></tr></table></figure><p><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Onektas的各种笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
